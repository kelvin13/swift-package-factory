name: build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    macos-nightly:
        runs-on: ${{ matrix.os }}
        name: ${{ matrix.os }} (${{ matrix.swift }})
        env: 
            SWIFT_TOOLCHAIN_DIRECTORY: /Library/Developer/Toolchains/swift-${{ matrix.swift }}.xctoolchain
        strategy:
            matrix:
                os: 
                    -   macos-12
                swift: 
                    -   DEVELOPMENT-SNAPSHOT-2022-08-15-a
        steps:
            -   uses: actions/checkout@v2

            -   name: cache swift toolchains
                uses: actions/cache@v2
                with:
                    path: swift-${{ matrix.swift }}.pkg
                    key: ${{ matrix.os }}:swift:${{ matrix.swift }}
            
            -   name: cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: swift-${{ matrix.swift }}.pkg
            
            -   name: download swift toolchain 
                if: steps.cache_status.outputs.files_exists == 'false'
                run:   "curl https://download.swift.org/development/xcode/\
                        swift-${{ matrix.swift }}/\
                        swift-${{ matrix.swift }}-osx.pkg \
                        --output swift-${{ matrix.swift }}.pkg"
            
            -   name: set up swift
                run: |
                    sudo installer -pkg swift-${{ matrix.swift }}.pkg -target /
            
            -   name: build-factory
                run: |
                    $SWIFT_TOOLCHAIN_DIRECTORY/usr/bin/swift --version
                    $SWIFT_TOOLCHAIN_DIRECTORY/usr/bin/swift build --product swift-package-factory 
                    $SWIFT_TOOLCHAIN_DIRECTORY/usr/bin/swift build --product FactoryPlugin 
            -   name: run-factory 
                # need to (re)create empty swift file to satisfy the SPM
                # also need to manually symlink lib_InternalSwiftSyntaxParser.dylib since SPM 
                # sets the wrong @rpath. 
                run: | 
                    ln -s $SWIFT_TOOLCHAIN_DIRECTORY/usr/lib/swift/macosx/lib_InternalSwiftSyntaxParser.dylib .build/debug/lib_InternalSwiftSyntaxParser.dylib
                    rm Examples/ValidExamples/*.swift
                    touch Examples/ValidExamples/Empty.swift
                    $SWIFT_TOOLCHAIN_DIRECTORY/usr/bin/swift package factory FactoryPluginValidExampleTarget
            -   name: test-factory 
                # check that none of the generated .swift files have changed
                run: | 
                    $SWIFT_TOOLCHAIN_DIRECTORY/usr/bin/swift build --target FactoryPluginValidExampleTarget
                    if [[ -z $(git status -s) ]]; then (exit 0); else (exit 1); fi
    
    linux:
        runs-on: ${{ matrix.os.runner }}
        name: ${{ matrix.os.runner }} (${{ matrix.swift.toolchain }})
        strategy:
            matrix:
                os: 
                    -   runner: ubuntu-22.04
                        prefix: ubuntu2204
                        suffix: ubuntu22.04
                    -   runner: ubuntu-20.04
                        prefix: ubuntu2004
                        suffix: ubuntu20.04
                swift: 
                    -   toolchain:  DEVELOPMENT-SNAPSHOT-2022-08-15-a
                        branch:     development
        steps:
            -   uses: actions/checkout@v2
            
            -   name: cache swift toolchains
                uses: actions/cache@v2
                with:
                    path: swift-${{ matrix.swift.toolchain }}.tar.gz
                    key: ${{ matrix.os.runner }}:swift:${{ matrix.swift.toolchain }}
                    
            -   name: cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: swift-${{ matrix.swift.toolchain }}.tar.gz
            
            -   name: download swift toolchain 
                if: steps.cache_status.outputs.files_exists == 'false'
                run:   "curl https://download.swift.org/\
                        ${{ matrix.swift.branch }}/\
                        ${{ matrix.os.prefix }}/\
                        swift-${{ matrix.swift.toolchain }}/\
                        swift-${{ matrix.swift.toolchain }}-${{ matrix.os.suffix }}.tar.gz \
                        --output swift-${{ matrix.swift.toolchain }}.tar.gz"
            
            -   name: set up swift
                run: |
                    mkdir -p $GITHUB_WORKSPACE/swift-${{ matrix.swift.toolchain }}
                    tar -xzf swift-${{ matrix.swift.toolchain }}.tar.gz -C $GITHUB_WORKSPACE/swift-${{ matrix.swift.toolchain }} --strip 1
                    echo "$GITHUB_WORKSPACE/swift-${{ matrix.swift.toolchain }}/usr/bin" >> $GITHUB_PATH
            
            -   name: build-factory
                run: |
                    swift --version
                    swift build --product swift-package-factory 
                    swift build --product FactoryPlugin 
            -   name: run-factory 
                # need to (re)create empty swift file to satisfy the SPM
                run: | 
                    rm Examples/ValidExamples/*.swift
                    touch Examples/ValidExamples/Empty.swift
                    swift package factory FactoryPluginValidExampleTarget
            -   name: test-factory 
                # check that none of the generated .swift files have changed
                run: | 
                    swift build --target FactoryPluginValidExampleTarget
                    if [[ -z $(git status -s) ]]; then (exit 0); else (exit 1); fi