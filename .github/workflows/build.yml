name: build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build-macos:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [macos-12]
                swift: [DEVELOPMENT-SNAPSHOT-2022-08-15-a]
        steps:
            -   uses: actions/checkout@v2

            -   name: cache swift toolchains
                uses: actions/cache@v2
                with:
                    path: swift-${{ matrix.swift }}.pkg
                    key: ${{ matrix.os }}:swift:${{ matrix.swift }}
            
            -   name: cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: swift-${{ matrix.swift }}.pkg
            
            -   name: download swift toolchain 
                if: steps.cache_status.outputs.files_exists == 'false'
                run: curl https://download.swift.org/development/xcode/swift-${{ matrix.swift }}/swift-${{ matrix.swift }}-osx.pkg --output swift-${{ matrix.swift }}.pkg
            
            -   name: set up swift
                run: |
                    sudo installer -pkg swift-${{ matrix.swift }}.pkg -target /
            
            -   name: build-factory
                run: |
                    /Library/Developer/Toolchains/swift-${{ matrix.swift }}.xctoolchain/usr/bin/swift --version

    build-linux:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-22.04, ubuntu-20.04]
                swift: [DEVELOPMENT-SNAPSHOT-2022-08-15-a]
        steps:
            -   uses: actions/checkout@v2
            
            -   name: cache swift toolchains
                uses: actions/cache@v2
                with:
                    path: swift-${{ matrix.swift }}.tar.gz
                    key: ${{ matrix.os }}:swift:${{ matrix.swift }}
                    
            -   name: cache status
                id:   cache_status
                uses: andstor/file-existence-action@v1
                with:
                    files: swift-${{ matrix.swift }}.tar.gz
            
            -   name: download swift toolchain 
                if: steps.cache_status.outputs.files_exists == 'false'
                run: curl https://download.swift.org/development/$(echo ${{ matrix.os }} | sed 's/[^a-zA-Z0-9]//g')/swift-${{ matrix.swift }}/swift-${{ matrix.swift }}-$(echo ${{ matrix.os }} | sed 's/[^a-zA-Z0-9\.]//g').tar.gz --output swift-${{ matrix.swift }}.tar.gz
            
            -   name: set up swift
                run: |
                    mkdir -p $GITHUB_WORKSPACE/swift-${{ matrix.swift }}
                    tar -xzf swift-${{ matrix.swift }}.tar.gz -C $GITHUB_WORKSPACE/swift-${{ matrix.swift }} --strip 1
                    echo "$GITHUB_WORKSPACE/swift-${{ matrix.swift }}/usr/bin" >> $GITHUB_PATH
            -   name: build-factory
                run: |
                    swift --version
                    swift build --product swift-package-factory 
                    swift build --product FactoryPlugin 
            -   name: run-factory 
                run: | 
                    swift package factory FactoryPluginValidExampleTarget
            -   name: test-factory 
                # check that none of the generated .swift files have changed
                run: | 
                    swift build --target FactoryPluginValidExampleTarget
                    if [[ -z $(git status -s) ]]; then (exit 0); else (exit 1); fi